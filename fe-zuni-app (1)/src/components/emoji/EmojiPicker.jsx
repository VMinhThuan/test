import { useState } from "react";

const EmojiPicker = ({ onSelectEmoji }) => {
  const emojis = [
    "üòÄ",
    "üòÅ",
    "üòÇ",
    "ü§£",
    "üòÉ",
    "üòÑ",
    "üòÖ",
    "üòÜ",
    "üòâ",
    "üòä",
    "üòã",
    "üòé",
    "üòç",
    "üòò",
    "ü•∞",
    "üòó",
    "üòô",
    "üòö",
    "üôÇ",
    "ü§ó",
    "ü§©",
    "ü§î",
    "ü§®",
    "üòê",
    "üòë",
    "üò∂",
    "üôÑ",
    "üòè",
    "üò£",
    "üò•",
    "üòÆ",
    "ü§ê",
    "üòØ",
    "üò™",
    "üò´",
    "ü•±",
    "üò¥",
    "üòå",
    "üòõ",
    "üòú",
    "üòù",
    "ü§§",
    "üòí",
    "üòì",
    "üòî",
    "üòï",
    "üôÉ",
    "ü§ë",
    "üò≤",
    "‚òπÔ∏è",
    "üôÅ",
    "üòñ",
    "üòû",
    "üòü",
    "üò§",
    "üò¢",
    "üò≠",
    "üò¶",
    "üòß",
    "üò®",
    "üò©",
    "ü§Ø",
    "üò¨",
    "üò∞",
    "üò±",
    "ü•µ",
    "ü•∂",
    "üò≥",
    "ü§™",
    "üòµ",
    "ü•¥",
    "üò†",
    "üò°",
    "ü§¨",
    "üò∑",
    "ü§í",
    "ü§ï",
    "ü§¢",
    "ü§Æ",
    "ü§ß",
    "üòá",
    "ü•≥",
    "ü•∫",
    "ü§†",
    "ü§°",
    "ü§•",
    "ü§´",
    "ü§≠",
    "üßê",
    "ü§ì",
    "üòà",
    "üëø",
    "üëπ",
    "üë∫",
    "üíÄ",
    "üëª",
    "üëΩ",
    "ü§ñ",
    "üí©",
    "üò∫",
    "üò∏",
    "üòπ",
    "üòª",
    "üòº",
    "üòΩ",
    "üôÄ",
    "üòø",
    "üòæ",
    "üëç",
    "üëé",
    "üëè",
    "üôå",
    "üëê",
    "ü§≤",
    "ü§ù",
    "üôè",
    "‚úåÔ∏è",
    "ü§û",
    "ü§ü",
    "ü§ò",
    "üëå",
    "ü§è",
    "üëà",
    "üëâ",
    "üëÜ",
    "üëá",
    "‚òùÔ∏è",
    "üëã",
    "ü§ö",
    "üñêÔ∏è",
    "‚úã",
    "üññ",
    "üëä",
    "‚úä",
    "ü§õ",
    "ü§ú",
    "ü§å",
    "üëã",
  ];

  const stickerCategories = [
    { name: "C·∫£m x√∫c", icon: "üòä" },
    { name: "ƒê·ªông v·∫≠t", icon: "üê±" },
    { name: "Th·ª©c ƒÉn", icon: "üçî" },
    { name: "Ho·∫°t ƒë·ªông", icon: "‚öΩ" },
    { name: "Du l·ªãch", icon: "‚úàÔ∏è" },
    { name: "ƒê·ªì v·∫≠t", icon: "üí°" },
    { name: "Bi·ªÉu t∆∞·ª£ng", icon: "üíØ" },
  ];

  const [activeTab, setActiveTab] = useState("EMOJI");

  const handleEmojiClick = (emoji) => {
    onSelectEmoji(emoji);
  };

  return (
    <div className="emoji-picker absolute bottom-9 right-0 w-[360px] h-[350px] bg-white rounded-xl shadow-lg border border-gray-200 z-50 overflow-hidden flex flex-col">
      {/* Tabs */}
      <div className="flex w-full border-b border-gray-200">
        <button
          className={`flex-1 py-2 text-center font-medium cursor-pointer hover:text-blue-500 ${
            activeTab === "STICKER"
              ? "text-blue-500 border-b-2 border-blue-500"
              : "text-gray-500"
          }`}
          onClick={() => setActiveTab("STICKER")}
        >
          STICKER
        </button>
        <button
          className={`flex-1 py-2 text-center font-medium cursor-pointer hover:text-blue-500 ${
            activeTab === "EMOJI"
              ? "text-blue-500 border-b-2 border-blue-500"
              : "text-gray-500"
          }`}
          onClick={() => setActiveTab("EMOJI")}
        >
          EMOJI
        </button>
      </div>

      {/* N·ªôi dung tab */}
      {activeTab === "EMOJI" ? (
        <div className="p-2 flex-1 overflow-y-auto">
          <div className="text-xs text-gray-500 mb-2 ml-1">C·∫£m x√∫c</div>
          <div className="grid grid-cols-8 gap-2">
            {emojis.map((emoji, index) => (
              <div
                key={index}
                className="w-9 h-9 flex items-center justify-center hover:bg-gray-100 rounded-full cursor-pointer transition-colors"
                onClick={() => handleEmojiClick(emoji)}
              >
                <span className="text-2xl">{emoji}</span>
              </div>
            ))}
          </div>
        </div>
      ) : (
        <div className="p-2 flex-1 overflow-y-auto">
          <div className="text-xs text-gray-500 mb-2 ml-1">Danh m·ª•c</div>
          <div className="grid grid-cols-4 gap-2">
            {stickerCategories.map((category, index) => (
              <div
                key={index}
                className="flex flex-col items-center justify-center p-2 hover:bg-gray-100 rounded-lg cursor-pointer transition-colors"
              >
                <span className="text-2xl">{category.icon}</span>
                <span className="text-xs mt-1">{category.name}</span>
              </div>
            ))}
          </div>
          <div className="mt-4 text-center text-sm text-gray-500">
            T√≠nh nƒÉng sticker ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn
          </div>
        </div>
      )}

      {/* Bottom toolbar */}
      <div className="flex items-center px-2 py-1 border-t border-gray-200 bg-gray-50">
        <button className="p-1 text-gray-600 hover:text-blue-500">Z</button>
        <div className="flex-1 flex items-center justify-center space-x-3">
          <button className="p-1 text-gray-600 hover:text-blue-500">üòä</button>
          <button className="p-1 text-gray-600 hover:text-blue-500">‚öôÔ∏è</button>
          <button className="p-1 text-gray-600 hover:text-blue-500">üï∂Ô∏è</button>
          <button className="p-1 text-gray-600 hover:text-blue-500">‚öΩ</button>
          <button className="p-1 text-gray-600 hover:text-blue-500">‚úàÔ∏è</button>
          <button className="p-1 text-gray-600 hover:text-blue-500">üí°</button>
          <button className="p-1 text-gray-600 hover:text-blue-500">‚ù§Ô∏è</button>
        </div>
        <button className="p-1 text-gray-600 hover:text-blue-500">‚Üí</button>
      </div>
    </div>
  );
};

export default EmojiPicker;
